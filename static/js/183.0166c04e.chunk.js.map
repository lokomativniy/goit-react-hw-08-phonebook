{"version":3,"file":"static/js/183.0166c04e.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/contacts-selector.js","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ListContact/ListContact.module.css?7a3a","components/ItemListContact/ItemListContact.jsx","components/ListContact/ListContact.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","views/ContactsView.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Section_section__NnORp\",\"title\":\"Section_title__6Q2E8\"};","import s from './Section.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <div className={s.section}>\r\n    {title && <h2 className={s.title}>{title}</h2>}\r\n    {children}\r\n  </div>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"ContactForm_input__7+hp6\",\"btn\":\"ContactForm_btn__cgJhM\"};","export const getItems = state =>\r\n  state.contactsApi.queries['fetchContacts(undefined)']?.data;\r\nexport const getFilter = state => state.filter;\r\n\r\nexport const getFilteredContacts = state => {\r\n  const items = getItems(state);\r\n  const filter = getFilter(state);\r\n  const normalizedFilter = filter.toLowerCase();\r\n  return items.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n","import { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport s from './ContactForm.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport { getItems } from '../../redux/contacts/contacts-selector';\r\nimport { useAddContactMutation } from '../../redux/contacts/contacts-slice';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst ContactForm = () => {\r\n  const [addContact, { isLoading }] = useAddContactMutation();\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const items = useSelector(getItems);\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  const handleInputChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const findSameName = () =>\r\n    items.find(item => item.name.toLowerCase() === name.toLowerCase());\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (findSameName()) {\r\n      toast.error(`${name} is already in contacts`);\r\n      resetValue();\r\n      return;\r\n    }\r\n    addContact({ name, number });\r\n    toast.success(`${name} is successfully added in contacts`);\r\n    resetValue();\r\n  };\r\n\r\n  const resetValue = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={classes.form}>\r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n          value={name}\r\n          onChange={handleInputChange}\r\n          className={s.input}\r\n          autoComplete=\"off\"\r\n          placeholder=\"Please enter name\"\r\n        />\r\n      </label>\r\n      <label className={s.label}>\r\n        Phone\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n          value={number}\r\n          onChange={handleInputChange}\r\n          className={s.input}\r\n          autoComplete=\"off\"\r\n          placeholder=\"Please enter number\"\r\n        />\r\n      </label>\r\n      <Button\r\n        type=\"submit\"\r\n        fullWidth\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className={classes.submit}\r\n        disabled={isLoading}\r\n      >\r\n        {isLoading ? 'Adding...' : 'Add contact'}\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\nContactForm.propTypes = {\r\n  items: PropTypes.array,\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\nexport default ContactForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ListContact_list__355y3\",\"item\":\"ListContact_item__0I2r9\",\"span\":\"ListContact_span__Ysof3\",\"loader\":\"ListContact_loader__MwtTZ\",\"title\":\"ListContact_title__oWwtE\",\"btn\":\"ListContact_btn__OV57B\"};","import { useDeleteContactMutation } from '../../redux/contacts/contacts-slice.js';\r\nimport s from '../ListContact/ListContact.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst ItemListContact = ({ id, name, number }) => {\r\n  const [deleteContact, { isLoading: deleting }] = useDeleteContactMutation();\r\n\r\n  return (\r\n    <>\r\n      <li className={s.item}>\r\n        name : <span className={s.span}>{name}</span>\r\n        <br /> phone : <span className={s.span}>{number}</span>\r\n        <button\r\n          className={s.btn}\r\n          onClick={() => {\r\n            deleteContact(id);\r\n            toast.success(`${name} is successfully deleted`);\r\n          }}\r\n          disabled={deleting}\r\n        >\r\n          {deleting ? <p>Deleting...</p> : 'Delete'}\r\n        </button>\r\n      </li>\r\n    </>\r\n  );\r\n};\r\nItemListContact.propTypes = {\r\n  id: PropTypes.string,\r\n  name: PropTypes.string,\r\n  phone: PropTypes.string,\r\n  deleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ItemListContact;\r\n","import React from 'react';\r\nimport s from './ListContact.module.css';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { getFilter } from '../../redux/contacts/contacts-selector';\r\nimport { useFetchContactsQuery } from '../../redux/contacts/contacts-slice.js';\r\nimport ItemListContact from '../ItemListContact/ItemListContact';\r\nimport Loader from '../Loader';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst ListContact = () => {\r\n  const filtered = useSelector(getFilter);\r\n  const { data: contacts, error, isFetching } = useFetchContactsQuery();\r\n  const normalizedFilter = filtered.toLowerCase();\r\n\r\n  const filteredContacts = () => {\r\n    if (contacts) {\r\n      return contacts.filter(({ name }) =>\r\n        name.toLowerCase().includes(normalizedFilter),\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2 className={s.title}>Contacts</h2>\r\n      <div className={s.loader}>{isFetching && <Loader />}</div>\r\n      {error && toast.error(`Something went wrong`)}\r\n      {contacts && (\r\n        <ul className={s.list}>\r\n          {filteredContacts().map(contact => (\r\n            <ItemListContact key={contact.id} {...contact} />\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListContact;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__HzV7M\",\"input\":\"Filter_input__kID2p\"};","import React from 'react';\r\nimport s from './Filter.module.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { changeFilter } from '../../redux/contacts/contacts-action';\r\nimport { getFilter } from '../../redux/contacts/contacts-selector';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = () => {\r\n  const filter = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  const onChange = e => dispatch(changeFilter(e.target.value));\r\n\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        value={filter}\r\n        className={s.input}\r\n        onChange={onChange}\r\n        name=\"filter\"\r\n        type=\"text\"\r\n        autoComplete=\"off\"\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import Section from '../components/Section/Section.jsx';\r\nimport ContactForm from '../components/ContactForm/ContactForm.jsx';\r\nimport ListContact from '../components/ListContact/ListContact.jsx';\r\nimport Filter from '../components/Filter/Filter.jsx';\r\n\r\nconst ContactsView = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'space-around',\r\n        marginTop: '15px',\r\n      }}\r\n    >\r\n      <Section title=\"Phonebook\">\r\n        <ContactForm />\r\n        <Filter />\r\n      </Section>\r\n      <Section>\r\n        <ListContact />\r\n      </Section>\r\n    </div>\r\n  );\r\n};\r\nexport default ContactsView;\r\n"],"names":["title","children","className","s","getItems","state","contactsApi","queries","data","getFilter","filter","useAddContactMutation","addContact","isLoading","useState","name","setName","number","setNumber","items","useSelector","classes","makeStyles","theme","submit","margin","spacing","useStyles","handleInputChange","e","currentTarget","value","resetValue","onSubmit","preventDefault","find","item","toLowerCase","toast","form","type","pattern","required","onChange","autoComplete","placeholder","Button","fullWidth","variant","color","disabled","id","useDeleteContactMutation","deleteContact","deleting","onClick","filtered","useFetchContactsQuery","contacts","error","isFetching","normalizedFilter","Loader","includes","filteredContacts","map","contact","dispatch","useDispatch","changeFilter","target","style","display","justifyContent","marginTop"],"sourceRoot":""}